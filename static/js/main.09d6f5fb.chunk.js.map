{"version":3,"sources":["logo.svg","components/Calculator.js","components/Tweeter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Calculator","props","state","cases","deaths","statesData","calculate","handleCasesChange","bind","handleDeathsChange","handleStateSelect","handleOfficialChange","handleLocationChange","official","parent","e","this","setState","target","value","futureCases","futureDeaths","Math","pow","roundToNearestTenth","n","round","Cases","Deaths","State","className","id","onChange","map","index","key","type","name","React","Component","Tweeter","console","log","handleChange","textarea","makeText","window","location","href","split","getWebsiteURL","text","Button","variant","onClick","open","Form","Control","as","rows","App","getData","getCSVData","fetch","then","response","reader","body","getReader","decoder","TextDecoder","read","result","decode","data","pop","fetchCSV","csvData","Papa","parse","header","complete","Container","Row","Col","xs","md","Alert","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.09d6f5fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport {Form, Dropdown, DropdownButton} from \"react-bootstrap\";\n\nexport default class Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cases: 17038,\n            deaths: 220,\n            statesData: [],\n        }\n        this.calculate();\n        this.handleCasesChange = this.handleCasesChange.bind(this);\n        this.handleDeathsChange = this.handleDeathsChange.bind(this);\n        this.handleStateSelect = this.handleStateSelect.bind(this);\n        this.handleOfficialChange = this.handleOfficialChange.bind(this);\n        this.handleLocationChange = this.handleLocationChange.bind(this);\n        this.state.official = this.props.parent.state.official\n        this.state.state = this.props.parent.state.state\n    }\n\n    handleCasesChange(e) {\n        this.setState({\n            cases: e.target.value\n        })\n        this.calculate(e.target.value)\n    }\n\n    handleDeathsChange(e) {\n        this.setState({\n            deaths: e.target.value\n        })\n        this.calculate(null, e.target.value)\n    }\n\n    calculate(cases, deaths) {\n        cases = cases || this.state.cases\n        deaths = deaths || this.state.deaths\n\n        let futureCases = 0, futureDeaths = 0;\n\n        if (cases != 0 && deaths == 0) {\n            futureCases = cases * Math.pow(2, (21/5));\n            futureDeaths = cases * Math.pow(2, (21/5)) * 0.013;\n         } else if (cases == 0 && deaths == 0) {\n            futureCases = 0\n            futureDeaths = 0\n         } else {\n            futureCases = cases * Math.pow(2, (21/5))\n            futureDeaths = cases * Math.pow(2, (21/5))*(deaths/cases)\n         }\n\n        this.props.parent.setState({\n            futureCases: this.roundToNearestTenth(futureCases)\n        })\n\n        this.props.parent.setState({\n            futureDeaths: this.roundToNearestTenth(futureDeaths)\n        })\n    }\n\n    roundToNearestTenth(n) {\n        return Math.round(n/10)*10;\n    }\n\n    handleStateSelect(e) {\n        let state = this.props.statesData[e.target.value]\n        this.setState({\n            cases: state.Cases,\n            deaths: state.Deaths,\n        })\n        this.props.parent.setState({\n            state: state.State,\n            official: state[\"Twitter Handle\"]\n        })\n        this.calculate(state.Cases, state.Deaths);\n    }\n\n    handleOfficialChange(e) {\n        this.props.parent.setState({\n            official: e.target.value\n        })\n        this.setState({\n            official: e.target.value\n        })\n    }\n\n    handleLocationChange(e) {\n        this.props.parent.setState({\n            state: e.target.value\n        })\n        this.setState({\n            state: e.target.value\n        })\n    }\n\n    render() {\n        return <div className=\"item\">\n            <h3>Plug in your Area’s Data</h3>\n            {/* <p>Choose a State for Prefilled Data</p> */}\n            <form>\n                <label>\n                   State:<br/>\n                <select id=\"state\" onChange={this.handleStateSelect}>\n                    {this.props.statesData.map((state, index) => {\n                        return <option value={index} key={index}>{state[\"State\"]}</option>\n                    })}   \n                </select>\n                </label>\n                <br/>\n            <label>\n                Cases Right Now  <br/>\n                <input type=\"number\" name=\"name\" value={this.state.cases} onChange={this.handleCasesChange} />\n            </label><br/>\n            <label>\n                Deaths Right Now  <br/>\n                <input type=\"number\" name=\"name\" value={this.state.deaths} onChange={this.handleDeathsChange} />\n            </label>\n<br/>\n            <label>\n                Who to Tag  <br/>\n                <input type=\"text\" name=\"name\" value={this.state.official} onChange={this.handleOfficialChange} />\n            </label>\n<br/>\n            <label>\n                Location  <br/>\n                <input type=\"text\" name=\"name\" value={this.state.state} onChange={this.handleLocationChange} />\n            </label>\n\n            \n            <br/>\n                </form>\n\n                In three weeks...\n                <br></br>\n                {this.props.parent.state.futureCases} Cases<br/>\n                {this.props.parent.state.futureDeaths} Deaths\n        </div>\n    }\n}","import React from \"react\"\nimport {Button, Form, Alert} from \"react-bootstrap\"\n\nexport default class Tweeter extends React.Component {\n    constructor(props) {\n        super(props)\n        console.log(props)\n        this.handleChange = this.handleChange.bind(this)\n        this.state = {\n            textarea: this.makeText()\n        }\n    }\n \n    handleChange(e) {\n        this.setState({\n            textarea: e.target.value\n        })\n    }\n\n    getWebsiteURL() {\n        const url = window.location.href;\n        return url.split(/[?#]/)[0];\n    }\n    \n    makeText() {\n        // return `.${this.props.official} three weeks from now, ${this.props.state} could have:\\n\\n${this.props.futureCases} of \\#COVID19\\n${this.props.futureDeaths} deaths\\n\\nWill You Be Ready to Act Then?\\n\\n#FlattenTheCurve\\#ThreeWeeks`\n        return `.${this.props.official} three weeks from now, we could have ${this.props.futureCases} cases and ${this.props.futureDeaths} deaths in ${this.props.state}. Will you be ready to act then? We can’t wait till 3 weeks from now. See how this was calculated at ${this.getWebsiteURL()} #FlattenTheCurve #ThreeWeeks `\n    }\n    render() {\n        console.log('tweet')\n        console.log(this.props)\n        let text = this.makeText()\n        return <div className=\"item\">\n                        <h3>Take Action</h3>\n\n            <Button variant=\"primary\" target=\"_blank\" onClick={() => {\n                let href = `https://twitter.com/intent/tweet?hashtags=FlattenTheCurve%20%23ThreeWeeksBehind&text=${text}`\n                window.open(href, \"_blank\")\n            }}>Tweet This</Button><br/>\n            <br/>\n\n            <Form.Control as=\"textarea\" rows=\"7\" value={text} />\n        This is an example tweet. After clicking tweet, you can edit and confirm before sending. We will not make tweets without your permission.\n        </div>\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Calculator from \"./components/Calculator\"\nimport Tweeter from \"./components/Tweeter\"\nimport {Alert, Button, Container,Row, Col} from \"react-bootstrap\"\nimport Papa from 'papaparse';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.state.text = \"\"\n    this.state.futureDeaths = 313150\n    this.state.futureCases = 4050\n    this.state.state = \"the United States\"\n    this.state.official = \"@realDonaldTrump\"\n    this.state.statesData = []\n    this.getData = this.getData.bind(this);\n  }\n\n  componentWillMount() {\n      this.getCSVData();\n  }\n\n  async fetchCSV() {\n      return fetch(\"https://docs.google.com/spreadsheets/d/1FmDsmAq3fX9K2BAsfh6EibpnRxhV-DNvMSlX_fiLHOc/export?format=csv&id=1FmDsmAq3fX9K2BAsfh6EibpnRxhV-DNvMSlX_fiLHOc&gid=0\").then(function (response) {\n          let reader = response.body.getReader();\n          let decoder = new TextDecoder('utf-8');\n\n          return reader.read().then(function (result) {\n              return decoder.decode(result.value);\n          });\n      });\n  }\n\n  getData(result) {\n    let data = result.data\n    data.pop()\n    data.pop()\n    data.pop()\n    data.pop()\n\n      this.setState({statesData: data});\n  }\n\n  async getCSVData() {\n      let csvData = await this.fetchCSV();\n\n      Papa.parse(csvData, {\n          header: true,\n          complete: this.getData\n      });\n  }\n\n\n\n  render() {\n    console.log(\"update!\")\n    console.log(this.state)\n    console.log(this.state.statesData)\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>\n            COVID-19 - <code>3 Weeks From Now</code> \n          </h1>\n        </header>\n        Experts say that it could take up to the three weeks before we see the effects of our actions in reducing hospitalizations and deaths. We're worried that our elected officials aren't thinking ahead.\n<br/>\n      <Button variant=\"success\" href=\"https://www.imperial.ac.uk/media/imperial-college/medicine/sph/ide/gida-fellowships/Imperial-College-COVID19-NPI-modelling-16-03-2020.pdf\">Imperial College Paper</Button>\n      <Button variant=\"warning\" href=\"https://docs.google.com/spreadsheets/d/1FmDsmAq3fX9K2BAsfh6EibpnRxhV-DNvMSlX_fiLHOc/\">Current Data</Button>\n      <br/>\n        <Container>\n          <Row>\n          <Col xs={12} md={5}>\n            <Calculator parent={this} statesData={this.state.statesData} />\n          </Col>\n          <Col>\n            <Tweeter official={this.state.official} futureCases={this.state.futureCases} futureDeaths={this.state.futureDeaths} state={this.state.state} />\n          </Col>\n          </Row>\n        </Container>\n        <Alert variant=\"primary\">\n        Note that this is intended as a rough estimate of the consequences of doing nothing, not an expert forecast. There are many reasons that our numbers could be incorrect, including the data itself -- many cases are going undetected right now, which means the total cases reported are too low and the death rate may be overestimated. Calculations are based on a five day doubling time and a 1.3% average population death rate for the US.\n      </Alert>\n      <Alert variant=\"dark\" className=\"footer\">\n      Created with ❤️ by <a href=\"https://twitter.com/realronakshah\">Ronak Shah</a> @ UCSD. Data insights from <a href=\"https://twitter.com/diddykrish\">Aditya Krishnaswamy</a> and <a href=\"https://twitter.com/Malar0ne\">Mallory Harris</a> from UGA. Code available on <a href=\"https://github.com/ronakdev/covidthree\">Github</a>.\n      </Alert>\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}